'use strict';var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i['return'])_i['return']()}finally{if(_d)throw _e}}return _arr}return function(arr,i){if(Array.isArray(arr)){return arr}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i)}else{throw new TypeError('Invalid attempt to destructure non-iterable instance')}}}();function _toArray(arr){return Array.isArray(arr)?arr:Array.from(arr)}var CREOENTODOS='CREOENTODOS';var size=_.size(CREOENTODOS);var dirs={'left':[0,-1],'right':[0,1],'up':[-1,0],'down':[1,0],'up-left':[-1,-1],'up-right':[-1,1],'down-left':[1,-1],'down-right':[1,1]};var accomplished=0;var tried=0;function initialMatrix(){var matrix=[];_.times(size,function(){matrix.push(_.toArray(CREOENTODOS))});return matrix}function index$(r,c){return $('#'+_.padStart(r,2,'0')+'_'+_.padStart(c,2,'0'))}function showCounters(){$('#tried').text(tried);$('#accomplished').text(accomplished)}function showMatrix(matrix){_.forEach(matrix,function(word,r){_.forEach(word,function(letter,c){var letterTD=index$(r,c);letterTD.text(letter)})})}function markFound(found,cb,descr){var time=500;function indexClass(index){return'path_'+index}function clss$(clss){return $('.'+clss)}var times=0;function go(descr){setTimeout(function(){clss$('marked').removeClass('marked');var newDescr=_(descr).filter('rest[0]').map(function(_ref){var index=_ref.index,_ref$rest=_toArray(_ref.rest),_ref$rest$=_slicedToArray(_ref$rest[0],2),r=_ref$rest$[0],c=_ref$rest$[1],rest=_ref$rest.slice(1);var clss=indexClass(index);index$(r,c).addClass(clss+' passed');clss$(clss).addClass('marked');return{index:index,rest:rest}}).value();if(_.isEmpty(newDescr)){// No more letters to mark
tried+=1;if(times===size){// Marked the word!
accomplished+=1;_.forEach(descr,function(_ref2){var index=_ref2.index;// mark all completed ones
clss$(indexClass(index)).removeClass('passed marked').addClass('completed')});return setTimeout(cb,time*3);// Show it longer
}else{return cb()}}else{times+=1;return go(newDescr)}},time)}return go(_.map(found,function(rest,index){return{index:index,rest:rest}}))}function clearMatrix(matrix,found,cb){_.times(size,function(r){_.times(size,function(c){index$(r,c).removeClass()})})}// Shuffle all letters
function shuffleAll(matrix){return _.chunk(_.shuffle(_.flatten(matrix)),size)}// Shuffle per line
function shuffleLines(matrix){return _.map(matrix,_.flowRight(_.shuffle,_.cloneDeep))}function find(matrix){var paths=[];var startL=_.head(CREOENTODOS);var restL=_.tail(CREOENTODOS);_.forEach(matrix,function(word,r){_.forEach(word,function(letter,c){if(startL===letter){paths.push([[r,c]])}})});var size=0;function go(paths,letter){size=size+1;function go(path,index){if(_.size(path)<size){return[path]}var lastP=_.nth(path,-1);var penultimateP=_.nth(path,-2);// Valid positions only
var poss=_(dirs).map(function(dir){var newP=_.zipWith(lastP,dir,function(l,m){return l+m});return _.isEqual(penultimateP,newP)?null:newP}).compact().filter(function(_ref3){var _ref4=_slicedToArray(_ref3,2),r=_ref4[0],c=_ref4[1];return _.get(matrix,'['+r+']['+c+']')===letter}).value();if(_.isEmpty(poss)){// No new letter found
return[path]}else{// Some new letters found (1 or more)
return _(poss).map(function(pos){return _.concat(path,[pos])}).value()}}return _.flatMap(paths,go)}return _.reduce(restL,go,paths)}function shuffledShownMatrix(matrix,times,cb){var time=100;showMatrix(matrix);if(times<1){cb(matrix)}else{matrix=shuffleAll(matrix);setTimeout(function(){shuffledShownMatrix(matrix,times-1,cb)},time)}}function logMatrix(matrix){console.log(_.map(matrix,function(row){return row.join(' ')}).join('\n'))}function workIt(matrix){var time=1000;setTimeout(function(){clearMatrix(matrix);shuffledShownMatrix(matrix,1,function(matrix){var found=find(matrix);markFound(found,function(letters){showCounters();workIt(matrix)})})},time)}$(document).ready(function(){var matrix=initialMatrix();showCounters();showMatrix(matrix);workIt(matrix)});
